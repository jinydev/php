I"M<h1 id="가변-함수-variable-function">가변 함수 (variable function)</h1>
<hr />
<p>가변 함수란 PHP에서 함수를 호출할 때 동적으로 함수를 호출할 수 있는 기능입니다.</p>

<p><br /></p>

<h2 id="문법">문법</h2>
<hr />
<p>지금까지 함수 선언 <code class="highlighter-rouge">function</code> 키워드를 통해 정의한 함수 이름을 사용하여 함수를 호출했습니다.<br />
소스상에서 선언한 함수명을 기준으로 직접 함수명(); 형태로 적어서 함수를 호출하여 사용했습니다.</p>

<p>|문법|</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$변수명</span> <span class="o">=</span> <span class="s2">"함수 이름"</span><span class="p">;</span>
<span class="nv">$변수명</span><span class="p">();</span>
</code></pre></div></div>
<p>가변 함수는 변수명에 함수명을 대입하고 <code class="highlighter-rouge">$변수명();</code> 형태로 함수를 호출할 수 있습니다.</p>

<p>함수명을 임시변수에 문자열로 저장한 후에 저장된 문자열과 일치하는 함수를 호출하는 것입니다.</p>

<p><br /></p>

<h2 id="가변-함수-호출">가변 함수 호출</h2>
<hr />
<p>가변 함수 호출은 동적으로 함수를 처리하여 호출할 때 매우 유용합니다.<br />
가변 함수를 이용하면 프로그램 로직 또는 입력값을 분석하여 동적으로 함수를 실행할 수 있는 장점 등이 있습니다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="nv">$func</span><span class="o">==</span><span class="s2">"aaa"</span><span class="p">){</span>
	<span class="nx">aaa</span><span class="p">();</span>
<span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$func</span><span class="o">==</span><span class="s2">"bbb"</span><span class="p">){</span>
	<span class="nx">bbb</span><span class="p">();</span>
<span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nv">$func</span><span class="o">==</span><span class="s2">"ccc"</span><span class="p">){</span>
	<span class="nx">ccc</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<p>위와 같이 조건에 따라서 각각 다르게 함수 호출을 처리해야 하는 경우에는 가변 함수 호출을 통해 쉽게 작성할 수 있습니다.</p>

<p>기존 함수 호출 방식</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">function</span> <span class="nf">hello</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"hello() 함수입니다.&lt;br /&gt;</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">hello</span><span class="p">();</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>가변 함수 호출 방식<br />
예제 파일 func-18.php</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

	<span class="k">function</span> <span class="nf">hello</span><span class="p">()</span> <span class="p">{</span>
    	<span class="k">echo</span> <span class="s2">"hello() 함수입니다.&lt;br /&gt;</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="nv">$func</span> <span class="o">=</span> <span class="s2">"hello"</span><span class="p">;</span>
	<span class="nv">$func</span><span class="p">();</span>

<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hello() 함수입니다.
</code></pre></div></div>

<p>위의 예제를 보면 $func 변수에는 함수명을 저장합니다. 저장된 변수의 함수명을 이용하여 함수를 호출합니다.<br />
이처럼 변수를 이용하여 가변적으로 함수를 호출할 수 있는 방법이 가변 함수입니다.</p>

<p><br /></p>

<h2 id="클래스-가변-메서드">클래스 가변 메서드</h2>
<hr />
<p>가변 함수 문법은 향후 설명할 클래스에서도 메서드를 호출할 때 비슷한 방법으로 호출할 수 있습니다.<br />
여기서는 간단히 학습하겠습니다.</p>

<p>클래스 &amp; 가변 함수<br />
예제 파일 func-19.php</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kd">class</span> <span class="nc">jiny</span>
<span class="p">{</span>
	<span class="k">function</span> <span class="nf">Variable</span><span class="p">()</span>
	<span class="p">{</span>
			<span class="nv">$name</span> <span class="o">=</span> <span class="s1">'Bar'</span><span class="p">;</span>
			<span class="nv">$this</span><span class="o">-&gt;</span><span class="nv">$name</span><span class="p">();</span> <span class="c1">// Bar() 메서드를 호출합니다.</span>
	<span class="p">}</span>

	<span class="k">function</span> <span class="nf">Bar</span><span class="p">()</span>
	<span class="p">{</span>
			<span class="k">echo</span> <span class="s2">"This is Bar"</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="nv">$jiny</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">jiny</span><span class="p">();</span>
<span class="nv">$funcname</span> <span class="o">=</span> <span class="s2">"Variable"</span><span class="p">;</span>
<span class="nv">$jiny</span><span class="o">-&gt;</span><span class="nv">$funcname</span><span class="p">();</span>  <span class="c1">// $jiny-&gt;Variable()를 호출합니다.</span>

<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>This is Bar
</code></pre></div></div>

<p>위의 예제처럼 클래스를 선언하고, 인스턴스를 생성한 후에 클래스에서 호출하는 메서드도 변수를 통해 가변 메서드 형태로 호출할 수도 있습니다.</p>

<p><br /><br /></p>
:ET