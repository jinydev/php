I"<h1 id="기본문법">기본문법</h1>
<hr />
<p><code class="highlighter-rouge">PHP 언어</code>를 학습하는 초보자를 대상으로 기본적인 프로그램밍 구조와 문법에 대해서 학습합니다.</p>

<p><br /></p>

<h2 id="코드작성">코드작성</h2>
<hr />
<p>PHP 코드를 작성 및 삽입을 위한 <code class="highlighter-rouge">Tag</code>와 코드 작성을 위한 코드 컨벤션인 <code class="highlighter-rouge">PSR</code>에 대해서 알아 봅니다.</p>

<h3 id="php-테그"><a href="tag">PHP 테그</a></h3>
<hr />
<p>PHP 코드를 작성하는 방법은 자유롭습니다. PHP코드의 시작과 끝을 <code class="highlighter-rouge">표기</code>만 해주면 됩니다.<br />
시작테그(<code class="highlighter-rouge"><span class="cp">&lt;?php</span></code>)와 종료테그(<code class="highlighter-rouge">?&gt;</code>)에 대해서 학습합니다.</p>

<ul>
  <li><a href="tag">시작테그와 종료테그</a></li>
  <li>html코드와 <a href="tag/html">혼합 사용하기</a></li>
  <li><a href="standard">독립적인 php코드</a> 사용하기</li>
</ul>

<p><br /></p>

<h3 id="코드스타일-psr"><a href="psr">코드스타일 PSR</a></h3>
<hr />
<p>PSR은 코드 스타일을 권장하여 더 많은 사람들이 PHP 소스를 공유하고 함께 개발하기 위해서입니다.</p>

<ul>
  <li><a href="psr/psr1">PSR-1</a></li>
  <li><a href="psr/psr2">PSR-2</a></li>
</ul>

<p><br /></p>

<h2 id="자료구조-및-연산">자료구조 및 연산</h2>
<hr />
<p>PHP 언어의 <code class="highlighter-rouge">상수</code>, <code class="highlighter-rouge">변수</code>의 선언 및 구조에 대해서 알아 봅니다. 또한, 기본적인 연산 동작에 대해서 알아 봅니다.</p>

<p><br /></p>

<h3 id="상수"><a href="const">상수</a></h3>
<hr />
<p>개발자가 프로그램에서 <code class="highlighter-rouge">직접 정의한 데이터 값</code>은 프로그램 동작 중에는 변경되지 않는 <code class="highlighter-rouge">고정값</code>입니다.<br />
보통 이렇게 프로그램 동작에 따라서 처리되는 값이 아닌 프로그램 처음부터 끝까지 고정된 값을 <code class="highlighter-rouge">상수</code>라고 표현합니다.</p>

<ul>
  <li><a href="const/type">상수의 타입</a></li>
  <li>상수값 사용</li>
  <li><a href="const/define">define()</a></li>
  <li><a href="const/const">const 키워드</a></li>
  <li><a href="const/defined">상수 존재 여부 확인</a></li>
  <li><a href="const/reserved">미리 정의된 상수</a></li>
</ul>

<p><br /></p>

<h3 id="변수"><a href="variable">변수</a></h3>
<hr />
<p>반복적인 일을 수행하기 위해서는 변수라는 메모리 공간이 필요합니다. 
이렇게 프로그램이 실행하고 있는 도중에 값을 저장하는 메모리 공간을 변수라고 부릅니다.</p>

<ul>
  <li><a href="variable/name">변수명을 만드는 규칙</a></li>
  <li><a href="variable/memory">변수와 메모리</a></li>
  <li><a href="variable/declare">변수의 선언</a></li>
  <li>변수의 <a href="variable/type">데이터 형식</a></li>
  <li><a href="variable/scalar">스칼라</a> 타입</li>
  <li><a href="variable/ref">가변변수</a></li>
  <li><a href="variable/unset">변수 삭제</a></li>
  <li>자동 <a href="variable/global">전역변수</a></li>
</ul>

<p><br /></p>

<h3 id="연산자"><a href="operator">연산자</a></h3>
<hr />
<p>프로그램 언어에서의 연산은 기본적인 덧셈, 뺄셈과 같은 산술 연산 이외에 다양한 연산 처리를 합니다.</p>

<p><br /></p>

<h2 id="흐름제어">흐름제어</h2>
<hr />
<p>절차지향적 논리적 프로그래밍을 위한 흐름제어 기능에 대해서 알아 보도록 합니다.</p>

<h3 id="제어문">제어문</h3>
<hr />
<ul>
  <li><a href="condition">조건제어문</a></li>
  <li><a href="condition/ternary">3항 연산자</a></li>
</ul>

<h3 id="반복문">반복문</h3>
<hr />
<ul>
  <li><a href="loop">반복문</a></li>
</ul>

<p><br /></p>

<h2 id="전처리기"><a href="preprocess">전처리기</a></h2>
<hr />
<ul>
  <li>include</li>
  <li>require</li>
</ul>

<p><br /></p>

<h2 id="유효범위"><a href="scope">유효범위</a></h2>
<hr />
<ul>
  <li>Global : 글로벌변수</li>
  <li>Local : 지역변수</li>
  <li>Static : 정적변수</li>
</ul>

<p><br /></p>

:ET