I"#<h1 id="연산자">연산자</h1>
<hr />
<p>연산의 개념은 초등학교부터 자연스럽게 학습했습니다. 더하기, 빼기 등 산술 연산은 어려서부터 공부를 했습니다.</p>

<p>컴퓨터의 발전과 프로그램의 역사는 이 기본적인 수학적 연산을 하기 위해서 발전하였습니다. 그리고 이러한 수학적 표현과 연산법을 좀 더 쉽게 프로그래밍을 하기 위해서 다양한 프로그램 언어들로 진화한 것입니다.</p>

<p>연산 작업은 컴퓨터의 가장 기초적인 동작과 근본이 되는 개념입니다. 하지만 이를 너무 쉽게 생각하고 건너뛰거나 개략적인 부분만 이야기를 한 것 같습니다. 이번 장에서는 좀 더 심화된 연산과 이와 관련된 연산 기법들을 살펴보도록 하겠습니다.</p>

<p>프로그램 언어에서의 연산은 기본적인 덧셈, 뺄셈과 같은 산술 연산 이외에 다양한 연산 처리를 합니다. 우리가 학년이 올라가서 산수에서 수학의 개념으로, 집합 및 대수의 비교 등 컴퓨터가 처리할 수 있는 연산들은 다음과 같습니다.</p>

<p>PHP에서는 다음과 같은 연산과 기호를 제공합니다.</p>
<ul>
  <li><a href="assignment">대입</a></li>
  <li>
    <p><a href="reference">참조</a></p>
  </li>
  <li><a href="arithmetic">산술 연산</a></li>
  <li>
    <p><a href="priority">우선순위</a></p>
  </li>
  <li><a href="ompare">비교 연산</a></li>
  <li><a href="07.6">증가/감소 연산자</a></li>
  <li><a href="logic">논리 연산자</a></li>
  <li>
    <p><a href="bit">비트 연산자</a></p>
  </li>
  <li><a href="stringop">문자열 연산자</a></li>
  <li>
    <p><a href="arrayop">배열 연산자</a></p>
  </li>
  <li><a href="sapceship">sapceship</a></li>
  <li><a href="error">오류제어</a></li>
</ul>

<p>위의 연산들은 우리가 잘 알고 있는 수학적인 기호를 사용하지만 일부 기호들은 좀 더 컴퓨터적인 측면으로 처리되는 부분도 있습니다.</p>

<p><br /><br /></p>
:ET